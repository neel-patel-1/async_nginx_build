user qat qat;

load_module modules/ngx_ssl_engine_qat_module.so;
worker_processes  20;


events {
    use epoll;
    worker_connections 102400;
    accept_mutex off;
}

# Enable QAT engine in heretic mode.
ssl_engine {
    use_engine qatengine;
    default_algorithms RSA,EC,DH,DSA;
    qat_engine {
        qat_offload_mode async;
        qat_notify_mode poll;
        qat_poll_mode heuristic;
    }
}

http {

    server {
        listen       192.168.3.2:80;
        server_name  localhost;
        location / {
            root   html;
            index  index.html index.htm;
        }
    }

    # HTTPS server with async mode.
    server {
		listen       192.168.2.2:443 ssl asynch ; 
		sendfile on;  

        ssl_protocols       TLSv1.2;
			ssl_certificate      server.crt;  
			ssl_certificate_key  server.key;  

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.3.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
			ssl_certificate      server.crt;  
			ssl_certificate_key  server.key;  

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.4.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.5.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.6.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.7.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.8.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.9.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.10.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.11.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
    server {
        #If QAT Engine enabled,  `asynch` need to add to `listen` directive or just add `ssl_asynch  on;` to the context.
        listen       192.168.12.2:443 ssl asynch;
        server_name  localhost;

        ssl_protocols       TLSv1.2;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
}
